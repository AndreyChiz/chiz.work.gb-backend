pipeline {
    agent any
    // –ò–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç:
    // agent { docker { image 'python:3.12-alpine' } }

    environment {
        APP_NAME = 'my_app'
        DOCKER_IMAGE = "myrepo/${APP_NAME}"
    }

    options {
        ansiColor('xterm')      // <‚îÄ‚îÄ –¶–≤–µ—Ç–Ω–æ–π –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª–∏
        timestamps()            // –í—Ä–µ–º—è –≤ –ª–æ–≥–∞—Ö
        skipStagesAfterUnstable()
    }

    stages {
        stage('Checkout') {
            steps {
                echo '\u001B[36müì¶ –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...\u001B[0m'  // –≥–æ–ª—É–±–æ–π
                sh '''
                    echo -e "\\033[33m==> –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:\\033[0m"
                    ls -la --color=always
                '''
                checkout scm
            }
        }
    }

    post {
        success {
            echo '\u001B[32m‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!\u001B[0m'
        }
        failure {
            echo '\u001B[31m‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ!\u001B[0m'
        }
    }
}
